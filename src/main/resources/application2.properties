#ShardingSphere分片策略
#配置数据源，给数据源起个别名
#水平分库 配置两个数据源
spring.shardingsphere.datasource.names=db0, db1, db2

#一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true

#配置第一个数据源具体内容，包含连接池、驱动、地址、用户名、密码
spring.shardingsphere.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db0.username=root
spring.shardingsphere.datasource.db0.password=123456
spring.shardingsphere.datasource.db0.url=jdbc:mysql://localhost:3306/edu_db_0?serverTimezone=GMT%2B8


#配置第二个数据源具体内容，包含连接池、驱动、地址、用户名、密码
spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.username=root
spring.shardingsphere.datasource.db1.password=123456
spring.shardingsphere.datasource.db1.url=jdbc:mysql://localhost:3306/edu_db_1?serverTimezone=GMT%2B8

#配置第三个数据源具体内容，包含连接池、驱动、地址、用户名、密码
spring.shardingsphere.datasource.db2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db2.username=root
spring.shardingsphere.datasource.db2.password=123456
spring.shardingsphere.datasource.db2.url=jdbc:mysql://localhost:3306/user_db?serverTimezone=GMT%2B8

#指定表的分布情况 配置表在那个数据库中 表名称都是什么
spring.shardingsphere.sharding.tables.course.actual-data-nodes=db$->{0..1}.course_$->{0..1}

#指定表里面主键生成策略 SNOWFLAKE 雪花算法
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithm-expression=db$->{user_id % 2}

#指定分片策略 约定cid为奇数存到course_1表内 cid为偶数存到course_2表内
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid % 2}

#垂直切分配置 操作t_user时映射到指定表上 做到专库专表
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=db2.t_user

#指定表里面主键生成策略 SNOWFLAKE 雪花算法
spring.shardingsphere.sharding.tables.t_user.key-generator.column=user_id
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user

#打开sql输出日志
spring.shardingsphere.props.sql.show=true